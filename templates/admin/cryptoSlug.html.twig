{% extends 'base.html.twig' %}

{% block title %} Cryptos - Slug  {% endblock %}

{% block body %}
    {% for crypto in cryptos %}
        <div class="entete" style="background-image:url({{ crypto.image }}); ">
            <div class="container">
                <h1> {{ crypto.nom }}</h1>
                <a href="{{ path('admin_achat') }}" class="btn btn-primary">Acheter </a>
                {# <button class="btn btn-primary">Vendre </button> #}
            </div>
            
        </div>
        <div class="container">
            <div class="row mt-5">
                    <div class="col-md-8">
                        <h3>{{ crypto.nom}}</h3>
                        {{ crypto.content | raw }}
                    </div>
                    <div class="col-md-4">
                        <h5>Les cours du crypto monnaie <mark class="text-danger">{{ crypto.sigle }}</mark></h5>
                    {# {% if crypto.cotations | length >0 %} #}
                    
                            {# {% for crypto in crypto  %} #}
                                <p><span class="badge badge-primary " > Valeur:</span> <span class="badge badge-danger valeur" >{{crypto.valeur}} </p>
                                <p><span class="badge badge-primary" > Cours:</span> <span class="badge badge-danger cours" >{{crypto.cours}} 052052</p>
                                <p><span class="badge badge-primary" > Evolution:</span> <span class="badge badge-danger evolution" >{{crypto.evolution}} 87420</p>
                                {# <p><span class="badge badge-primary" > Voir graphe:</span>  #}
                                    <div class="ct-chart ct-perfect-fourth"></div>

                                    <script>
                                            var data = {
                                                // A labels array that can contain any sort of values
                                                labels: ['valeur', 'cours', 'evolution'],
                                                // Our series array that contains series objects or in this case series data arrays
                                                series: [
                                                ['{{crypto.valeur}}', '{{crypto.cours}}', '{{crypto.evolution}}']
                                                ]
                                            };
                                            
                                            // As options we currently only set a static size of 300x200 px. We can also omit this and use aspect ratio containers
                                            // as you saw in the previous example
                                            var options = {
                                                width: 300,
                                                height: 200
                                            };
                                            
                                            // Create a new line chart object where as first parameter we pass in a selector
                                            // that is resolving to our chart container element. The Second parameter
                                            // is the actual data object. As a third parameter we pass in our custom options.
                                            new Chartist.Line('.ct-chart', data, options);
                                    </script>
                                </p>
                            {# {% endfor %} #}
                    {# {% else %} #}
                            {# nn #}
                    {# {% endif %} #}
                    </div>
            </div>
        </div>
    {% endfor %}
{% endblock %}